# Generated by Django 2.2.5 on 2019-09-15 03:27

import datetime
from django.db import migrations, models
import django.db.models.deletion
import szgenapp.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clinical',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('group', models.CharField(help_text='Data analysis group eg, Australia-MSG1', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tank', models.CharField(blank=True, help_text='Tank number where sample stored', max_length=10, null=True)),
                ('shelf', models.CharField(blank=True, help_text='Shelf number in tank where sample stored', max_length=10, null=True)),
                ('cell', models.CharField(blank=True, help_text='Cell number on shelf in tank where sample stored', max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(choices=[('IND', 'India'), ('AUS', 'Australia'), ('SWK', 'Sarawak'), ('FIJ', 'Fiji'), ('UNK', 'Unknown')], max_length=30)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('WITHDRAWN', 'Withdrawn'), ('DECEASED', 'Deceased'), ('UNKNOWN', 'Unknown')], default='ACTIVE', max_length=20)),
                ('alphacode', models.CharField(blank=True, help_text='Alpha code if available', max_length=30, unique=True, verbose_name='Alpha Code')),
                ('accessid', models.CharField(blank=True, help_text='Alternative ID eg, ID from Samples Access DB', max_length=30, unique=True, verbose_name='AccessDB ID')),
                ('secondaryid', models.CharField(blank=True, help_text='Alternative or additional ID if available', max_length=30, unique=True, verbose_name='Secondary ID')),
                ('npid', models.CharField(blank=True, help_text='NP ID if available', max_length=30, unique=True, verbose_name='NeuroPsychiatric ID')),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sample_type', models.CharField(choices=[('PLASMA', 'Plasma'), ('SERUM', 'Serum'), ('PAXGENE', 'PAXGene'), ('WB', 'Whole blood'), ('SALIVA', 'Saliva')], help_text='Type of blood sample', max_length=60)),
                ('rebleed', models.BooleanField(default=False)),
                ('arrival_date', models.DateField(blank=True, default=datetime.date.today, help_text='Date of sample arrival', null=True, verbose_name='Arrival Date')),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=60)),
                ('precursor', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('STUDY_COMPLETED', 'Completed'), ('STUDY_ONGOING', 'Ongoing'), ('STUDY_NOTFUNDED', 'Not funded'), ('STUDY_OMIT', 'Omit')], max_length=20)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Study',
                'verbose_name_plural': 'Studies',
                'ordering': ('precursor',),
            },
        ),
        migrations.CreateModel(
            name='Demographic',
            fields=[
                ('clinical', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='szgenapp.Clinical')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=30, null=True)),
                ('age_assessment', models.IntegerField(blank=True, help_text='Age at the time of assessment', null=True, validators=[szgenapp.validators.validate_age], verbose_name='Age')),
                ('marital_status', models.CharField(blank=True, choices=[('married', 'Married'), ('nevmar', 'Single or Never married'), ('sepdiv', 'Separated or divorced'), ('widowed', 'Widowed, not remarried'), ('unknown', 'Unknown')], help_text='Marital status at the time of assessment', max_length=30, null=True)),
                ('living_arr', models.CharField(blank=True, choices=[('alone', 'Lives alone (including hostel)'), ('facility', 'Lives in a psychiatric treatment facility'), ('family', 'Lives with biological family members and/or spouse'), ('others', 'Lives with people who are not family (e.g. friends, housemates)'), ('unknown', 'Unknown')], help_text='Who the individual currently resides with (at time of assessment)', max_length=30, null=True, verbose_name='Living arrangement')),
                ('years_school', models.IntegerField(blank=True, help_text='Years of formal schooling', null=True, validators=[szgenapp.validators.validate_school_years])),
                ('current_emp_status', models.CharField(blank=True, choices=[('disabled', 'Formerly worked, no longer able (disabled)'), ('homemaker', 'Homemaker primary role'), ('never worked', 'Never worked at least 30% of time'), ('student', 'Full-time student'), ('unemployed', 'Not disabled but not working (unemployed)'), ('working', 'Working at least 30% of time'), ('unknown', 'Unknown')], help_text='Employment status (at time of assessment)', max_length=30, null=True, verbose_name='Current Employment')),
                ('employment_history', models.SmallIntegerField(blank=True, choices=[(1, 'Always worked'), (2, 'Periods of unemployment not related to illness'), (3, 'Minor occupational dysfunction'), (4, 'Moderate occupational dysfunction'), (5, 'Severe occupational dysfunction'), (0, 'Unknown')], help_text='Level of occupational disability over the past 5 years', null=True, verbose_name='Past Employment')),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('clinical', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='szgenapp.Clinical')),
                ('summary', models.CharField(blank=True, choices=[('SAD', 'Schizoaffective, depressed'), ('SAM', 'Schizoaffective, bipolar'), ('SZ', 'Schizophrenia')], help_text='DSMIV Diagnosis', max_length=30, null=True)),
                ('age_onset', models.IntegerField(blank=True, help_text='Age at onset of psychosis', null=True, validators=[szgenapp.validators.validate_onset_age])),
                ('illness_duration', models.IntegerField(blank=True, help_text='Illness duration (onset to current) in years', null=True, validators=[szgenapp.validators.validate_ill_duration])),
                ('illness_duration_approx', models.BooleanField(default=False, help_text='Period for illness duration is approximate (eg 20+)', verbose_name='Illness duration is approximate')),
                ('age_first_treatment', models.IntegerField(blank=True, help_text='Age at which psychiatric treatment first accessed', null=True, validators=[szgenapp.validators.validate_onset_age])),
                ('dup', models.IntegerField(blank=True, help_text='Period between onset and first treatment (in years)', null=True, verbose_name='Duration of Untreated Psychosis (DUP)')),
                ('dup_approx', models.BooleanField(default=False, help_text='Period for DUP is approximate (eg 20+)', verbose_name='DUP is approximate')),
                ('hospitalisation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Whether the individual has ever been hospitalised for psychiatric reasons', max_length=10, null=True)),
                ('hospitalisation_number', models.IntegerField(blank=True, help_text='Number of psychiatric hospitalisations (lifetime)', null=True, validators=[szgenapp.validators.validate_number_hosp], verbose_name='Number of hospitalisations')),
                ('hospitalisation_number_approx', models.BooleanField(default=False, help_text='Number of hospitalisations is approximate (eg >5)', verbose_name='Number of hospitalisations is approximate')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('clinical', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='szgenapp.Clinical')),
                ('thyroid', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Definite evidence of clinically significant thyroid problems', max_length=10, null=True, verbose_name='Thyroid')),
                ('epilepsy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Definite evidence of epilepsy or clinically significant seizures', max_length=10, null=True, verbose_name='Epilepsy')),
                ('head_injury', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Definite evidence of a significant head injury (i.e. \xa0serious enough to involve loss of consciousness) (lifetime)', max_length=10, null=True, verbose_name='Head Injury')),
                ('abnormal_bed', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text="Definite evidence of clinically significant birth complications during individual's birth, or definite delayed developmental milestones", max_length=10, null=True, verbose_name='Abnormal birth or early development')),
                ('intellectual_disability', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Intelluctual disability: IQ assessed <75', max_length=10, null=True, verbose_name='Intellectual disability')),
                ('alcohol', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='DSMIV lifetime alcohol abuse and/or dependence', max_length=10, null=True, verbose_name='Alcohol Use Disorder')),
                ('cannabis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='DSMIV lifetime cannabis abuse and/or dependence', max_length=10, null=True, verbose_name='Cannabis Use Disorder')),
                ('other_drug', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='DSMIV lifetime other illicit drug abuse and/or dependence', max_length=10, null=True, verbose_name='Other Drug Use Disorder')),
                ('other_drug_type', models.TextField(blank=True, help_text="Types of illicit drugs for which the individual meets the DSMIV criteria for lifetime abuse and/or dependence. Blank for all individuals where OthDrug is not 'Yes'", null=True, verbose_name='Illicit Drug Use Disorder Type')),
                ('suicide', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Whether the individual has ever attempted suicide', max_length=10, null=True, verbose_name='Suicide Attempts')),
                ('suicide_serious', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text="Whether the individual's most serious/severe suicide attempt involved serious intent to die.", max_length=10, null=True, verbose_name='Serious Suicidal Intent')),
            ],
        ),
        migrations.CreateModel(
            name='SymptomsBehaviour',
            fields=[
                ('clinical', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='szgenapp.Clinical')),
                ('disorg_speech', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Definite (lifetime) presence of disorganised speech/positive formal thought disorder', max_length=10, null=True, verbose_name='Disorganised Speech')),
                ('severe_disorg_speech', models.CharField(blank=True, choices=[('None', 'None'), ('Question', 'Question'), ('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Marked', 'Marked'), ('Severe', 'Severe'), ('Unknown', 'Unknown')], help_text="Severity of current disorganised speech/positive formal thought disorder (past 30 days). 'Question' category usually grouped with 'Unknown' category for analyses", max_length=20, null=True, verbose_name='Severity of Current Disorganised Speech')),
                ('disorg_catatonic_behav', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Definite (lifetime) presence of disorganised/catatonic behaviour', max_length=10, null=True, verbose_name='Disorganised /Catatonic Behaviour')),
                ('severe_disorg_catatonic_behav', models.CharField(blank=True, choices=[('None', 'None'), ('Question', 'Question'), ('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Marked', 'Marked'), ('Severe', 'Severe'), ('Unknown', 'Unknown')], help_text='Severity of current disorganised/catatonic behaviour (past 30 days)', max_length=20, null=True, verbose_name='Severity of Current Disorganised Behaviour')),
                ('negative_symptoms', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Definite (lifetime) presence of negative symptoms', max_length=10, null=True, verbose_name='Negative Symptoms')),
                ('affective_flattening', models.CharField(blank=True, choices=[('None', 'None'), ('Question', 'Question'), ('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Marked', 'Marked'), ('Severe', 'Severe'), ('Unknown', 'Unknown')], help_text='Severity of current affective flattening/inappropriate affect (past 30 days)', max_length=20, null=True, verbose_name='Affective Flattening')),
                ('allogia', models.CharField(blank=True, choices=[('None', 'None'), ('Question', 'Question'), ('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Marked', 'Marked'), ('Severe', 'Severe'), ('Unknown', 'Unknown')], help_text='Severity of current alogia/negative thought disorder (past 30 days)', max_length=20, null=True, verbose_name='Alogia')),
                ('avolition', models.CharField(blank=True, choices=[('None', 'None'), ('Question', 'Question'), ('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Marked', 'Marked'), ('Severe', 'Severe'), ('Unknown', 'Unknown')], help_text='Severity of current avolition/apathy (past 30 days)', max_length=20, null=True, verbose_name='Avolition /Apathy')),
                ('anhedonia', models.CharField(blank=True, choices=[('None', 'None'), ('Question', 'Question'), ('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Marked', 'Marked'), ('Severe', 'Severe'), ('Unknown', 'Unknown')], help_text='Severity of current anhedonia/asociality (past 30 days)', max_length=20, null=True, verbose_name='Anhedonia /Asociality')),
            ],
        ),
        migrations.CreateModel(
            name='SymptomsDelusion',
            fields=[
                ('clinical', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='szgenapp.Clinical')),
                ('final_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Definite (lifetime) presence of delusions', max_length=10, null=True, verbose_name='Final Delusions')),
                ('sevcur_delusions', models.CharField(blank=True, choices=[('None', 'None'), ('Question', 'Question'), ('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Marked', 'Marked'), ('Severe', 'Severe'), ('Unknown', 'Unknown')], help_text='Severity of current delusions (past 30 days)', max_length=20, null=True, verbose_name='Severity of Current Delusions')),
                ('bizarre_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of definitely bizarre delusions', max_length=10, null=True, verbose_name='Bizarre Delusions')),
                ('biw_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of thought broadcast/insertion/withdrawal delusions', max_length=10, null=True, verbose_name='Broadcast /Insertion /Withdrawal Delusions')),
                ('control_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of delusions of control of thought or actions', max_length=10, null=True, verbose_name='Control Delusions')),
                ('persecutory_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of persecutory delusions', max_length=10, null=True, verbose_name='Persecutory Delusions')),
                ('reference_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of delusions of reference', max_length=10, null=True, verbose_name='Referential Delusions')),
                ('jealousy_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of delusions of jealousy', max_length=10, null=True, verbose_name='Jealousy Delusions')),
                ('guilt_sin_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of guilt or sin delusions', max_length=10, null=True, verbose_name='Guilt/Sin Delusions')),
                ('grandiose_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of grandiose delusions', max_length=10, null=True, verbose_name='Grandiose Delusions')),
                ('religious_delusions', models.CharField(blank=True, choices=[('NO', 'No'), ('YES', 'Yes'), ('CUL', 'Culturally acceptable (non-delusional) beliefs'), ('U', 'Unknown')], help_text='Presence (lifetime) of religious delusions or delusions of magic', max_length=20, null=True, verbose_name='Religious /Magic Delusions')),
                ('somatic_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of somatic delusions', max_length=10, null=True, verbose_name='Somatic Delusions')),
                ('eroto_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of erotomanic delusions', max_length=10, null=True, verbose_name='Erotomanic Delusions')),
                ('mindread_delusions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text="Presence (lifetime) of delusions of mind reading (of individual's mind by others)", max_length=10, null=True, verbose_name='Mind Reading Delusions')),
            ],
        ),
        migrations.CreateModel(
            name='SymptomsDepression',
            fields=[
                ('clinical', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='szgenapp.Clinical')),
                ('final_depression', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Definite (lifetime) presence of at least one DSMIV major depressive episode', max_length=10, null=True, verbose_name='Final Depression')),
                ('depressed_mood', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Persistent depressed mood for 2+ weeks (DSMIV depression symptom – either depressed mood or anhedonia must be present for a major depressive episode)', max_length=10, null=True, verbose_name='Depressed Mood')),
                ('depression_anhedonia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Persistent anhedonia for 2+ weeks (DSMIV depression symptom – either depressed mood or anhedonia must be present for a major depressive episode)', max_length=10, null=True, verbose_name='Anhedonia (Depression)')),
                ('app_wt_change', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Significant appetite and/or weight change during depression (DSMIV depression symptom)', max_length=10, null=True, verbose_name='Appetite/Weight Change')),
                ('sleep_disturb', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Significant sleep pattern disturbance – either trouble sleeping or sleeping too much during depression (DSMIV depression symptom)', max_length=10, null=True, verbose_name='Sleep Disturbance')),
                ('psych_change', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Psychomotor agitation or retardation during depression (DSMIV depression symptom)', max_length=10, null=True, verbose_name='Psychomotor Change')),
                ('fatigue_energyloss', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Fatigue or loss of energy during depression (DSMIV depression symptom)', max_length=10, null=True, verbose_name='Fatigue/Energy Loss')),
                ('worthless_guilt', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Persistent feelings of worthlessness or guilt during depression (DSMIV depression symptom)', max_length=10, null=True, verbose_name='Worthlessness/Guilt')),
                ('decreased_conc', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Decreased concentration during depression (DSMIV depression symptom)', max_length=10, null=True, verbose_name='Decreased Concentration')),
                ('death_suicide', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Persistent thoughts of death or suicide during depression (DSMIV depression symptom)', max_length=10, null=True, verbose_name='Thoughts of Death/Suicide')),
                ('depressive_symptoms_count', models.IntegerField(blank=True, help_text='Count of DSMIV depressive symptoms used to establish the presence/absence of an episode (0-9). Symptoms are operationalised to correspond with the DSMIV diagnostic criteria. 5+ required, one of which must be depressed mood or anhedonia (although presence of symptoms concurrently does not guarantee a positive rating for an episode due to time criterion).', null=True, validators=[szgenapp.validators.validate_depression_count], verbose_name='Count of Depressive Symptoms')),
            ],
        ),
        migrations.CreateModel(
            name='SymptomsGeneral',
            fields=[
                ('clinical', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='szgenapp.Clinical')),
                ('onset', models.CharField(blank=True, choices=[('ABRUPT', 'Abrupt (within a day)'), ('ACUTE', 'Acute (within a week)'), ('MODACUTE', 'Moderately acute (within a month)'), ('GRADUAL', 'Gradual (longer than a month)')], help_text='Rapidity of prodromal period (between noticeable social/occupational decline and definite onset of psychosis)', max_length=20, null=True, verbose_name='Onset of Psychosis')),
                ('severity_pattern', models.SmallIntegerField(blank=True, choices=[(1, 'Episodic shift (no deterioration when not actively unwell)'), (2, 'Mild deterioration'), (3, 'Moderate deterioration'), (4, 'Severe deterioration'), (0, 'Unknown')], help_text='Pattern of severity of decline in functioning over the course of the illness, as defined in the DIGS', null=True, verbose_name='Severity Pattern')),
                ('symptom_pattern', models.SmallIntegerField(blank=True, choices=[(1, 'Continuously positive'), (2, 'Predominantly negative'), (3, 'Positive converting to negative'), (4, 'Negative converting to positive (0 observations coded "4")'), (5, 'Continuous mixture of positive and negative symptoms'), (0, 'Unknown')], help_text='Relationship between positive and negative symptoms throughout the course of the illness, as defined in the DIGS', null=True, verbose_name='Symptom Pattern')),
                ('illness_course', models.SmallIntegerField(blank=True, choices=[(1, 'Episodic with interepisode residual symptoms'), (2, 'Episodic with no interepisode residual symptoms'), (3, 'Continuous'), (4, 'Single episode in partial remission'), (5, 'Single episode in full remission'), (6, 'Other, unspecified, unknown course')], help_text='Categorical illness course, as defined in the DIGS', null=True, verbose_name='Illness Course')),
                ('curr_gaf', models.CharField(blank=True, choices=[('None', '81-100 (None)'), ('Mild', '61-80 (Mild)'), ('Moderate', '31-60 (Moderate)'), ('Severe', '1-30 (Severe)'), ('Unknown', 'Unknown')], help_text='Current (past 30 days) rating on the Global Assessment of Function Scale', max_length=20, null=True, verbose_name='Current Global Assessment of Function (GAF)')),
                ('wl_gaf', models.CharField(blank=True, choices=[('None', '81-100 (None)'), ('Mild', '61-80 (Mild)'), ('Moderate', '31-60 (Moderate)'), ('Severe', '1-30 (Severe)'), ('Unknown', 'Unknown')], help_text='Lowest (lifetime) rating on the Global Assessment of Function Scale', max_length=20, null=True, verbose_name='Worst Lifetime Global Assessment of Function (GAF)')),
                ('current_ap_medication', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Whether the individual is definitely taking antipsychotic medication at the time of assessment', max_length=10, null=True, verbose_name='Current Antipsychotic medication')),
                ('clozapine_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Whether the individual is definitely taking clozapine at the time of assessment (Mandatory)', max_length=10, null=True, verbose_name='Clozapine Status')),
                ('treatment_resistant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Whether the individual meets strictly defined criteria for treatment resistance (Mandatory)', max_length=10, null=True, verbose_name='Treatment Resistant')),
            ],
        ),
        migrations.CreateModel(
            name='SymptomsHallucination',
            fields=[
                ('clinical', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='szgenapp.Clinical')),
                ('final_hallucinations', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Definite (lifetime) presence of hallucinations', max_length=10, null=True, verbose_name='Final Hallucinations')),
                ('severe_hallucinations', models.CharField(blank=True, choices=[('None', 'None'), ('Question', 'Question'), ('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Marked', 'Marked'), ('Severe', 'Severe'), ('Unknown', 'Unknown')], help_text="Severity of current hallucinations (past 30 days). 'Question' category usually grouped with 'Unknown' category for analyses", max_length=20, null=True, verbose_name='Severity of Current Hallucinations')),
                ('auditory_hallucinations', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of auditory hallucinations', max_length=10, null=True, verbose_name='Auditory hallucinations')),
                ('auditory_commentary_hallucinations', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of auditory hallucinations involving commentary or third person conversations between voices', max_length=10, null=True, verbose_name='Commentary /3rd Person Auditory Hallucinations')),
                ('visual_hallucinations', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of visual hallucinations', max_length=10, null=True, verbose_name='Visual Hallucinations')),
                ('olf_gust_hallucinations', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of olfactory or gustatory hallucinations', max_length=10, null=True, verbose_name='Olfactory /Gustatory Hallucinations')),
                ('somatic_hallucinations', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Presence (lifetime) of somatic/tactile hallucinations', max_length=10, null=True, verbose_name='Somatic/Tactile Hallucinations')),
            ],
        ),
        migrations.CreateModel(
            name='SymptomsMania',
            fields=[
                ('clinical', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='szgenapp.Clinical')),
                ('final_mania', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Definite (lifetime) presence of at least one DSMIV manic episode', max_length=10, null=True, verbose_name='Final mania')),
                ('elevated_mood', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Elated mood for 1+ week (or any duration if hospitalised) (either elated or irritable mood must be present for a DSMIV manic episode)', max_length=10, null=True, verbose_name='Elevated/Elated mood')),
                ('irritable_mood', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Irritable mood for 1+ week (or any duration if hospitalised) (either elated or irritable mood must be present for a DSMIV manic episode)', max_length=10, null=True, verbose_name='Irritable mood')),
                ('grandiosity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Grandiosity/inflated self esteem (DSMIV manic symptom)', max_length=10, null=True, verbose_name='Grandiosity')),
                ('decreased_sleep', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Decreased need for sleep – feels rested on little or no sleep (DSMIV manic symptom)', max_length=10, null=True, verbose_name='Decreased Need for Sleep')),
                ('pressured_speech', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='More talkative or pressured speech (DSMIV manic symptom)', max_length=10, null=True, verbose_name='Pressured Speech')),
                ('racing_thoughts', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Flight of ideas or subjective racing thoughts (DSMIV manic symptom)', max_length=10, null=True, verbose_name='Racing Thoughts/Flight of Ideas')),
                ('distractibility', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Distractibility (DSMIV manic symptom)', max_length=10, null=True, verbose_name='Distractibility')),
                ('psychmotor_agitation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Increased goal-oriented activity or psychomotor agitation (DSMIV manic symptom)', max_length=10, null=True, verbose_name='Psychomotor Agitation')),
                ('risky_behaviour', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unk', 'Unknown')], help_text='Excessive risky pleasurable behaviour (DSMIV manic symptom)', max_length=10, null=True, verbose_name='Risky Behaviour')),
                ('manic_count', models.IntegerField(blank=True, help_text='Count of DSMIV manic symptoms used to establish the presence/absence of an episode (0-7); Symptoms are operationalised to correspond with the DSMIV diagnostic criteria. 3+ required (if elevated mood is present), 4+ required (if only irritable mood is present). One of elevated or irritable mood is essential for a manic episode (note: the presence of symptoms concurrently does not guarantee a positive rating for an episode due to time criterion).', null=True, validators=[szgenapp.validators.validate_manic_count], verbose_name='Count of Manic Symptoms')),
            ],
        ),
        migrations.CreateModel(
            name='TransformSample',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('transform_date', models.DateField(blank=True, null=True, verbose_name='Transform Date')),
                ('failed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='SubSample',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sample_num', models.IntegerField(default=1, help_text='For example, number 1 of 5 subsamples')),
                ('sample_type', models.CharField(choices=[('LCYTE', 'Lymphocyte'), ('LCL', 'LCL'), ('DNA', 'DNA')], help_text='Type of the sub sample', max_length=30)),
                ('storage_date', models.DateField(blank=True, help_text='Date stored', null=True, verbose_name='Storage Date')),
                ('used', models.BooleanField(default=False, help_text='If used, location should be blank')),
                ('used_date', models.DateField(blank=True, help_text='Date sample used', null=True, verbose_name='Used Date')),
                ('extraction_date', models.DateField(blank=True, help_text='Date of DNA Extraction', null=True, verbose_name='Extraction Date')),
                ('notes', models.TextField(blank=True, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Location')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='StudyParticipant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fullnumber', models.CharField(blank=True, help_text='Provide full number if it cannot be generated from parts', max_length=30, unique=True, verbose_name='Full Number')),
                ('district', models.CharField(blank=True, help_text='For CBZ study enter district(1-5)', max_length=5, verbose_name='CBZ Study District')),
                ('family', models.CharField(blank=True, help_text='Family number if available', max_length=20)),
                ('individual', models.CharField(blank=True, help_text='Individual number if available', max_length=20)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studyparticipants', to='szgenapp.Participant')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Study')),
            ],
            options={
                'verbose_name': 'Study Participant',
                'verbose_name_plural': 'Study Participants',
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('shipment_date', models.DateField(help_text='Date on which sample shipped', verbose_name='Shipment Date')),
                ('reference', models.CharField(max_length=60)),
                ('rutgers_number', models.CharField(blank=True, help_text='Rutgers Shipment for LCLs', max_length=60, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Sample')),
            ],
        ),
        migrations.AddField(
            model_name='sample',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.StudyParticipant'),
        ),
        migrations.CreateModel(
            name='QC',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('qc_date', models.DateField(blank=True, help_text='Date on which quality control ran', null=True, verbose_name='QC Date')),
                ('passed', models.BooleanField(default=False, help_text='True if passed QC')),
                ('notes', models.TextField(blank=True, null=True)),
                ('subsample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sample_qc', to='szgenapp.SubSample')),
            ],
        ),
        migrations.CreateModel(
            name='HarvestSample',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('regrow_date', models.DateField(blank=True, null=True, verbose_name='Regrow Date')),
                ('harvest_date', models.DateField(blank=True, null=True, verbose_name='Harvest Date')),
                ('complete', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('docfile', models.FileField(help_text='Upload a document for storage and/or importing data', upload_to='', verbose_name='Document')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('doctype', models.CharField(max_length=10, verbose_name='Doctype')),
                ('study', models.ForeignKey(blank=True, help_text='Select only if document is related to one particular study', null=True, on_delete=django.db.models.deletion.SET_NULL, to='szgenapp.Study')),
            ],
        ),
        migrations.CreateModel(
            name='DatasetRow',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('digs', models.IntegerField(choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9)),
                ('figs', models.IntegerField(choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9)),
                ('narrative', models.IntegerField(choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9)),
                ('records', models.IntegerField(choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9)),
                ('consensus', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9, null=True)),
                ('ldps', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9, null=True)),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_participants', to='szgenapp.Dataset', verbose_name='dDataset')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.StudyParticipant')),
            ],
        ),
        migrations.CreateModel(
            name='DatasetFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CASEID', 'Case ID'), ('DIGS', 'DIGS'), ('FIGS', 'FIGS'), ('NARRATIVE', 'Narrative'), ('RECORDS', 'Medical Records'), ('CONSENSUS', 'Consensus'), ('LDPS', 'LDPS')], help_text='Type of the dataset eg, DIGS file', max_length=100)),
                ('filetype', models.CharField(choices=[('DIGITAL', 'Digital'), ('HARDCOPY', 'Hard Copy')], help_text='Digital or Hard copy resource', max_length=60)),
                ('location', models.CharField(help_text='Location of the dataset file either as URL or free text', max_length=1000)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_files', to='szgenapp.Dataset', verbose_name='Dataset')),
            ],
        ),
        migrations.AddField(
            model_name='clinical',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinical', to='szgenapp.StudyParticipant'),
        ),
    ]
