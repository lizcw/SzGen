# Generated by Django 2.2.5 on 2019-10-05 23:46

from django.db import migrations

from szgenapp.models.clinical import *
def load_gender(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in GENDER_CHOICES:
        Gender.objects.get_or_create(code=item[0], name=item[1])

def load_marital(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in MARITAL_STATUS_CHOICES:
        MaritalStatus.objects.get_or_create(code=item[0], name=item[1])

def load_living(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in LIVING_CHOICES:
        Living.objects.get_or_create(code=item[0], name=item[1])

def load_employment(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in EMPLOYMENT_CHOICES:
        Employment.objects.get_or_create(code=item[0], name=item[1])

def load_employmenthistory(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in EMPLOYMENT_HISTORY_CHOICES:
        EmploymentHistory.objects.get_or_create(code=item[0], name=item[1])

def load_dsmiv(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in DSMIV_CHOICES:
        Dsmiv.objects.get_or_create(code=item[0], name=item[1])

def load_severity(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in SEVERITY_CHOICES:
        Severity.objects.get_or_create(code=item[0], name=item[1])

def load_severitypattern(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in SEVERITY_PATTERN_CHOICES:
        SeverityPattern.objects.get_or_create(code=item[0], name=item[1])

def load_symptompattern(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in SYMPTOM_PATTERN_CHOICES:
        SymptomPattern.objects.get_or_create(code=item[0], name=item[1])

def load_religious(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in RELIGIOUS_CHOICES:
        Religious.objects.get_or_create(code=item[0], name=item[1])

def load_onset(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in ONSET_CHOICES:
        Onset.objects.get_or_create(code=item[0], name=item[1])

def load_illness(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in ILLNESS_CHOICES:
        Illness.objects.get_or_create(code=item[0], name=item[1])

def load_gaf(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in GAF_CHOICES:
        Gaf.objects.get_or_create(code=item[0], name=item[1])

def load_gafwl(apps, schema_editor):
    """
    Import data for lookup
    :param apps:
    :param schema_editor:
    :return:
    """
    for item in WL_GAF_CHOICES:
        Gafwl.objects.get_or_create(code=item[0], name=item[1])

class Migration(migrations.Migration):

    dependencies = [
        ('szgenapp', '0011_dsmiv_employment_employmenthistory_gaf_gafwl_gender_illness_living_maritalstatus_onset_religious_sev'),
    ]

    operations = [
        migrations.RunPython(load_gender),
        migrations.RunPython(load_marital),
        migrations.RunPython(load_living),
        migrations.RunPython(load_employment),
        migrations.RunPython(load_employmenthistory),
        migrations.RunPython(load_dsmiv),
        migrations.RunPython(load_severity),
        migrations.RunPython(load_severitypattern),
        migrations.RunPython(load_religious),
        migrations.RunPython(load_onset),
        migrations.RunPython(load_illness),
        migrations.RunPython(load_gaf),
        migrations.RunPython(load_gafwl),
        migrations.RunPython(load_symptompattern),
    ]
