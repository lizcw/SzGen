# Generated by Django 2.2.3 on 2019-07-21 05:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('szgenapp', '0011_auto_20190721_1037'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tank', models.CharField(blank=True, help_text='Tank number where sample stored', max_length=10)),
                ('shelf', models.CharField(blank=True, help_text='Shelf number in tank where sample stored', max_length=10)),
                ('cell', models.CharField(blank=True, help_text='Cell number on shelf in tank where sample stored', max_length=10)),
                ('ref', models.CharField(blank=True, help_text='Alternative reference', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sample_type', models.CharField(choices=[('PLASMA', 'Plasma'), ('SERUM', 'Serum'), ('PAXGENE', 'PAXGene'), ('WB', 'Whole blood')], help_text='Type of blood sample', max_length=60)),
                ('stage_type', models.CharField(choices=[('HARVEST', 'Harvest'), ('GROW', 'Grow'), ('REGROW', 'Regrow'), ('TRANSFORM', 'Transform'), ('COMPLETE', 'Complete'), ('UNKNOWN', 'Unknown')], help_text='Processing Stage of sample', max_length=30)),
                ('rebleed', models.BooleanField(default=False)),
                ('stage', models.CharField(default='UNKNOWN', max_length=30)),
                ('storage_date', models.DateField(auto_now_add=True, verbose_name='Storage Date')),
                ('notes', models.TextField(blank=True)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.StudyParticipant')),
                ('storage_location', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Location', verbose_name='Location')),
            ],
        ),
        migrations.AlterField(
            model_name='datasetrow',
            name='consensus',
            field=models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9),
        ),
        migrations.AlterField(
            model_name='datasetrow',
            name='digs',
            field=models.IntegerField(choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9),
        ),
        migrations.AlterField(
            model_name='datasetrow',
            name='figs',
            field=models.IntegerField(choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9),
        ),
        migrations.AlterField(
            model_name='datasetrow',
            name='ldps',
            field=models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9),
        ),
        migrations.AlterField(
            model_name='datasetrow',
            name='narrative',
            field=models.IntegerField(choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9),
        ),
        migrations.AlterField(
            model_name='datasetrow',
            name='records',
            field=models.IntegerField(choices=[(0, 'No'), (1, 'Yes (electronic)'), (2, 'Yes (hard copy only)'), (3, 'Yes (not located)'), (9, 'Unknown')], default=9),
        ),
        migrations.CreateModel(
            name='TransformSample',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('transform_date', models.DateField(auto_now_add=True, verbose_name='Transform Date')),
                ('failed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='SubSample',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sample_num', models.IntegerField(default=1, help_text='For example, number 1 of 5 subsamples of LCL')),
                ('sample_type', models.CharField(choices=[('LCYTE', 'Lymphocyte'), ('LCL', 'LCL'), ('DNA', 'DNA')], help_text='Type of the sub sample', max_length=30)),
                ('used', models.BooleanField(default=False, help_text='If used, location should be blank')),
                ('storage_date', models.DateField(auto_now_add=True, verbose_name='Storage Date')),
                ('used_date', models.DateField(auto_now_add=True, verbose_name='Used Date')),
                ('extraction_date', models.DateField(auto_now_add=True, help_text='Date of DNA Extraction', verbose_name='Extraction Date')),
                ('notes', models.TextField(blank=True)),
                ('location', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Location')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('shipment_date', models.DateField(auto_now_add=True, help_text='Date on which sample shipped', verbose_name='Shipment Date')),
                ('reference', models.CharField(max_length=60)),
                ('notes', models.TextField(blank=True)),
                ('rutgers_number', models.CharField(blank=True, help_text='Rutgers Shipment No', max_length=60)),
                ('rutgers', models.BooleanField(default=False, help_text='Whether shipped to Rutgers')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='QC',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('qc_date', models.DateField(auto_now_add=True, help_text='Date on which quality control ran', verbose_name='QC Date')),
                ('passed', models.BooleanField(default=True, help_text='True if passed QC')),
                ('subsample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sample_qc', to='szgenapp.SubSample')),
            ],
        ),
        migrations.CreateModel(
            name='HarvestSample',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('regrow_date', models.DateField(auto_now_add=True, verbose_name='Regrow Date')),
                ('harvest_date', models.DateField(auto_now_add=True, verbose_name='Harvest Date')),
                ('complete', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='szgenapp.Sample')),
            ],
        ),
    ]
